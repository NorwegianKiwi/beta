webpackJsonp([98,385],{1210:function(e,n,l){e.exports={frontmatter:l(338),content:l(2116)}},2116:function(e,n,l){e.exports='<section class=intro id=introduksjon> <h1 class=intro id=introduksjon>Introduksjon</h1> <p>Denne oppgaven innfører moduler, som lar oss bruke kode som andre har skrevet. Når vi forstår moduler, er vi klare for <code>elm reactor</code>, som viser oss en webapplikasjon vi har skrevet i vår egen fil.</p> <p>Før du starter, må du ha gjennomført innstallasjonen i <a href=../02_funksjoner_elm_repl/02_funksjoner_elm_repl.html>oppgave 2</a>.</p> </section> <section class=activity id=lag-din-egen-nettside> <h1 class=activity id=lag-din-egen-nettside>Lag din egen nettside!</h1> <section class=check id=aktiviteter> <h2 class=check id=aktiviteter>Aktiviteter</h2> <ul> <li>Åpne en <strong>teksteditor</strong>, for eksempel teksteditoren <a href=http://atom.io>Atom</a>, <a href=http://brackets.io/ >Brackets</a>, NotePad eller <a href=https://notepad-plus-plus.org/ >NotePad++</a>.</li> <li>Lag en ny fil.</li> <li>Fyll inn dette i filen:</li> </ul> <pre><code class=language-elm><span class=hljs-import><span class=hljs-keyword>import</span> Html</span>\n\n<span class=hljs-title>main</span> = <span class=hljs-type>Html</span>.text <span class=hljs-string>"Hei, verden!"</span>\n</code></pre> <ul> <li>Lagre filen til filnavnet <code>hei.elm</code>.</li> </ul> <p>For å se nettsiden i en nettleser, må vi først gjøre om nettsiden vår til HTML. HTML er språket som forteller en nettleser om hvordan en nettside skal se ut. Se <a href=../../web/index.html>web-kurset</a> for å lære mer om HTML og nettsider.</p> <ul> <li>Om du har gjort <a href=../02_funksjoner_elm_repl/02_funksjoner_elm_repl.html>oppgave 2</a>, kan du nå åpne kommandolinjen og skrive inn <code>elm reactor</code>:</li> </ul> <pre><code>elm-reactor <span class=hljs-number>0.18</span><span class=hljs-number>.0</span>\nListening on http:<span class=hljs-comment>//localhost:8000/</span>\n</code></pre> <p>Det betyr at Elm venter på at du skal åpne http://localhost:8000/ i en nettleser. Finn så igjen filen <code>hei.elm</code>.</p> <figure><img src='+l(2746)+' alt=""/></figure> <p>Første gang du åpner filen, vil du få opp dette vinduet:</p> <figure><img src='+l(2745)+' alt=""/></figure> <p>Nå leser Elm gjennom filen din og gjør den om til vanlig HTML!</p> <ul> <li>Hvordan ser nettsiden din ut?</li> <li>La oss gjøre en endring. <ul> <li>Endre <code>&quot;Hei, verden!&quot;</code> til <code>&quot;Hei, alle sammen!&quot;</code></li> <li>Lagre filen</li> <li>Last nettleseren på nytt.</li> <li>Skjedde det noe?</li> </ul> </li> </ul> </section> <section class=try id=ting-du-kan-prove> <h2 class=try id=ting-du-kan-prove>Ting du kan prøve</h2> <ul> <li>For å åpne forskjellige programmer direkte fra nettsiden din, kan du skrive nettadressen slik: <code>localhost:8000/hei.elm</code>. Bare bytt ut filnavnet!</li> <li>Hva skjer når du åpner <code>hei.elm</code> direkte i nettleseren?</li> </ul> </section> </section> <section class=activity id=nar-noe-gar-galt> <h1 class=activity id=nar-noe-gar-galt>Når noe går galt</h1> <p>Elm prøver så godt den kan å hjelpe oss å skrive korrekte programmer. Når vi har gjort noe rart, sier den ifra. Endre <code>oppgave1a.elm</code> til følgende:</p> <pre><code class=language-elm><span class=hljs-import><span class=hljs-keyword>import</span> Html</span>\n\n<span class=hljs-title>main</span> = <span class=hljs-type>Html</span>.taxt <span class=hljs-string>"Hei, verden!"</span>\n</code></pre> <p>Elm svarer følgende:</p> <pre><code>Cannot find variable <span class=hljs-escape>`H</span>tml.taxt<span class=hljs-escape>`.</span>\n\n<span class=hljs-number>3</span>| main = Html.taxt <span class=hljs-string>"Hei, verden!"</span>\n          ^^^^^^^^^\n<span class=hljs-escape>`H</span>tml<span class=hljs-escape>` </span>does <span class=hljs-literal>not</span> expose <span class=hljs-escape>`t</span>axt<span class=hljs-escape>`.</span> Maybe you want one of the following?\n\n    Html.text\n</code></pre> <p>Dette betyr:</p> <ul> <li>Jeg vet ikke hva <code>Html.taxt</code> betyr</li> <li>Du prøvde å bruke <code>Html.taxt</code> på linje 3</li> <li>Kanskje du mente å skrive <code>Html.text</code>?</li> </ul> </section> <section class=activity id=del-nettsiden-opp-i-moduler> <h1 class=activity id=del-nettsiden-opp-i-moduler>Del nettsiden opp i moduler</h1> <ul> <li>Lag en ny fil og kall den <code>Knapper.elm</code></li> </ul> <p>Denne filen er akkurat lik nettsiden vår i forrige oppgave. Men denne gangen vil vi at andre skal kunne bruke den på deres nettsider. Da må vi starte med å fortelle at denne filen skal være en <em>modul</em>.</p> <ul> <li>Skriv inn dette i starten av filen:</li> </ul> <pre><code class=language-elm>  <span class=hljs-module><span class=hljs-keyword>module</span> Knapper exposing <span class=hljs-container>(..)</span>\n</span></code></pre> <p>Filen <code>Knapper.elm</code> inneholder nå en modul kalt <code>Knapper</code>!</p> <ul> <li>Prøv å åpne <code>localhost:8000/Knapper.elm</code></li> </ul> <p>Dette gir oss en feilmelding. Modulen vår inneholder ingenting ennå!</p> <ul> <li>Legg til en knapp i modulen:</li> </ul> <pre><code class=language-elm>  <span class=hljs-module><span class=hljs-keyword>module</span> Knapper exposing <span class=hljs-container>(..)</span>\n  import Html exposing <span class=hljs-container>(button, text)</span>\n\n  okKnapp = button [] [text "Ok!"]\n</span></code></pre> <p><code>import Html exposing (button, text)</code> importerer <em>Html-modulen</em>, som gjør at vi kan bruke Html-elementer i modulen vår. Siden vi skal bruke elementene <code>button</code> for å lage en knapp og <code>text</code> for å legge tekst på knappen, må vi legge til <code>(button, text)</code> når vi importerer Html-modulen.</p> <ul> <li>Legg til den nye knappen i filen fra forrige oppgave</li> </ul> <pre><code class=language-elm><span class=hljs-import><span class=hljs-keyword>import</span> Knapper</span>\n\n<span class=hljs-title>main</span> = <span class=hljs-type>Knapper</span>.okKnapp\n</code></pre> <p>På samme måte som vi importerer Html-elementer med <code>import Html</code>, kan vi importere våre egne elementer med <code>import Knapper</code>. <code>okKnapp</code> er en del av modulen <code>Knapper</code>, på samme måte som at <code>text</code> er en del av Html-modulen. Så vi kan skrive <code>Knapper.okKnapp</code> for å lage en okKnapp.</p> <ul> <li>Legg til en ekstra stilig knapp</li> </ul> <pre><code class=language-elm>  module Knapper exposing (..)\n  import Html exposing (button, text)\n  import Html.Attributes exposing (..)\n\n  okKnapp = button [] [text "Ok!"]\n  stiligKnapp = button [styling] [text "Stilig!"]\n\n  styling =\n    style\n      [ ("border-radius", "100%")\n      , ("padding", "10px")\n      , ("font-size", "5em")\n      , ("text-align", "center")\n      , ("background", "red")\n      , ("color", "blue")\n      ]\n</code></pre> <ul> <li>Bytt ut <code>okKnapp</code> med <code>stiligKnapp</code> og se hva som skjer</li> <li>Legg til flere egne knapper i modulen</li> </ul> </section> '},2745:function(e,n,l){e.exports=l.p+"_/oppgaver/src/elm/03_moduler_elm_reactor/building_project.0d0e07.png"},2746:function(e,n,l){e.exports=l.p+"_/oppgaver/src/elm/03_moduler_elm_reactor/file_navigation.7d9b54.png"}});